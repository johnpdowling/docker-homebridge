ARG BUILD_FROM=nvcr.io/nvidia/l4t-base:r32.4.2
FROM ${BUILD_FROM}
# hadolint ignore=DL3006

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Los_Angeles

#oznu's s6-node
COPY qemu-aarch64-static /usr/bin/

ENV S6_ARCH aarch64

RUN set -x && apt-get update \
  && apt-get install -y curl tzdata locales psmisc procps iputils-ping logrotate libatomic1 \
  && locale-gen en_US.UTF-8 \
  && curl -SLO "https://github.com/just-containers/s6-overlay/releases/download/v1.21.1.1/s6-overlay-${S6_ARCH}.tar.gz" \
  && tar -xzf s6-overlay-${S6_ARCH}.tar.gz -C / \
  && tar -xzf s6-overlay-${S6_ARCH}.tar.gz -C /usr ./bin \
  && rm -rf s6-overlay-${S6_ARCH}.tar.gz \
  && useradd -u 911 -U -d /config -s /bin/false abc \
  && usermod -G users abc \
  && mkdir -p /app /config /defaults \
  && apt-get clean \
  && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* \
  && rm -rf /etc/cron.daily/apt-compat /etc/cron.daily/dpkg /etc/cron.daily/passwd /etc/cron.daily/exim4-base \
  && sed -i "s#/var/log/messages {}.*# #g" /etc/logrotate.conf

ENV NODE_VERSION 12.16.1
ENV NODE_ARCH arm64

RUN set -x \
  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$NODE_ARCH.tar.gz" \
  && tar -xzf "node-v$NODE_VERSION-linux-$NODE_ARCH.tar.gz" -C /usr/local --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$NODE_ARCH.tar.gz" \
  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \
  && npm set prefix /usr/local \
  && npm config set unsafe-perm true

ENV YARN_VERSION 1.21.1

RUN set -ex \
  && curl -fSLO "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
  && mkdir -p /opt/yarn \
  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/yarn --strip-components=1 \
  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
  && ln -s /opt/yarn/bin/yarn /usr/local/bin/yarnpkg \
  && rm yarn-v$YARN_VERSION.tar.gz

###
##copy in other services, jetson ffmpeg libs/exec
##see https://github.com/jocover/jetson-ffmpeg
COPY rootfs /
RUN ldconfig \
 && chmod +x /usr/local/bin/ff*
###

RUN apt-get update \
  && apt-get install -y git python make cmake g++ libnss-mdns avahi-discover libavahi-compat-libdnssd-dev \
    net-tools iproute2 sudo nano pkg-config \
  && apt-get clean \
  && rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* \
  && chmod 4755 /bin/ping \
  && mkdir /homebridge \
  && npm set global-style=true \
  && npm set package-lock=false

ENV FFMPEG_ARCH aarch64

#RUN set -x \
#    && curl -Lfs https://github.com/oznu/ffmpeg-for-homebridge/releases/download/v0.0.1/ffmpeg-debian-${FFMPEG_ARCH}.tar.gz | tar xzf - -C / --no-same-owner

ENV HOMEBRIDGE_VERSION=0.4.52
RUN npm install -g --unsafe-perm homebridge@${HOMEBRIDGE_VERSION}

ENV CONFIG_UI_VERSION=4.12.0 HOMEBRIDGE_CONFIG_UI=0 HOMEBRIDGE_CONFIG_UI_PORT=8080
RUN npm install -g --unsafe-perm homebridge-config-ui-x@${CONFIG_UI_VERSION}

WORKDIR /homebridge
VOLUME /homebridge

COPY root /

ARG AVAHI
RUN [ "${AVAHI:-1}" = "1" ] || (echo "Removing Avahi" && \
  rm -rf /etc/services.d/avahi \
    /etc/services.d/dbus \
    /etc/cont-init.d/40-dbus-avahi)

CMD [ "/init" ]
